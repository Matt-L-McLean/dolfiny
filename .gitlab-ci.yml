stages:
   - lint
   - image
   - test
   - demo
   - release

default:
   tags:
      - docker

variables:
   CONTAINER_COMMIT_IMAGE: $CI_REGISTRY_IMAGE:master
   CONTAINER_MASTER_IMAGE: $CI_REGISTRY_IMAGE:master
   CONTAINER_LATEST_IMAGE: $CI_REGISTRY_IMAGE:latest

# jobs

flake8:
   stage: lint
   image: pipelinecomponents/flake8:latest
   script:
      - flake8 --verbose .

container image:
   stage: image
   image: docker:latest
   tags:
      - kutta
   variables:
      PLATFORMS: linux/amd64 #,linux/arm64
   script:
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      - docker buildx create --name multi --platform $PLATFORMS
      - docker buildx build --build-arg BUILDKIT_INLINE_CACHE=1
                     --build-arg DOLFINY_BUILD_TYPE=Release
                     --cache-from $CONTAINER_COMMIT_IMAGE
                     --cache-from $CONTAINER_MASTER_IMAGE
                     --tag $CONTAINER_COMMIT_IMAGE
                     --pull
                     --push
                     --builder multi --platform $PLATFORMS
                     .
      - echo CONTAINER_COMMIT_IMAGE="${CONTAINER_COMMIT_IMAGE}" >> build.env
   rules:
      - if: ($CI_PIPELINE_SOURCE == "schedule")
      - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
      - changes: 
         - Dockerfile
        variables:
           CONTAINER_COMMIT_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
        when: always
      - exists: 
         - Dockerfile
        when: manual
        allow_failure: true
   artifacts:
      reports:
        dotenv: build.env

container release:
   stage: release
   image: docker:latest
   script:
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      - docker pull $CONTAINER_COMMIT_IMAGE
      - docker tag $CONTAINER_COMMIT_IMAGE $CONTAINER_LATEST_IMAGE
      - docker push $CONTAINER_LATEST_IMAGE
   rules:
      - if: ($CI_COMMIT_BRANCH == "master")
      - if: ($CI_PIPELINE_SOURCE == "merge_request_event")

.test_template:
   stage: test
   image: $CONTAINER_COMMIT_IMAGE
   before_script:
      - pip3 install .
      - cd test
   artifacts:
      name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_REF_SLUG-artifacts"
      paths:
         - test/*/*
      expire_in: 1 week

test/unit/serial:
   extends: .test_template
   script:
      - cd unit
      - python3 -u -m pytest -n 8 -vsx .

test/unit/parallel:
   extends: .test_template
   script:
      - cd unit
      - mpirun -n 2 python3 -u -m pytest -vsx .

test/convergence:
   extends: .test_template
   script:
      - cd convergence
      - python3 -u -m pytest -n 8 -m 'convergence' -vsx .
      - python3 -u -m pytest -n 8 -m 'postprocess' -vsx .
   rules:
      - if: ($CI_RUN_TEST_CONVERGENCE == "yes")
      - if: ($CI_COMMIT_BRANCH)
        changes:
         - test/convergence/*.py
        when: always
      - exists: 
         - test/convergence/*.py
        when: manual
        allow_failure: true

.demo_template:
   stage: demo
   image: $CONTAINER_COMMIT_IMAGE
   before_script:
      - pip3 install .
      - cd demo
   rules:
      - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
      - if: ($CI_PIPELINE_SOURCE == "schedule")
      - if: ($CI_COMMIT_BRANCH)
        changes:
           - demo/*/*
   artifacts:
      name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_REF_SLUG-artifacts"
      paths:
         - demo/*/*
      expire_in: 1 week

demo/bingham:
   extends: .demo_template
   script:
      - cd bingham
      - mpirun -n 2 python3 bingham_block.py
      - mpirun -n 2 python3 bingham_lm_block.py

demo/beam:
   extends: .demo_template
   script:
      - cd beam
      - mpirun -n 2 python3 beam_curved_finitestrain_bstar.py
      - mpirun -n 1 python3 beam_curved_finitestrain_bstar.py
      - mpirun -n 2 python3 beam_curved_finitestrain_bzero.py
      - mpirun -n 1 python3 beam_curved_finitestrain_bzero.py

demo/vsolid:
   extends: .demo_template
   script:
      - cd vsolid
      - mpirun -n 2 python3 duffing.py
      - mpirun -n 4 python3 solid_disp_tda.py
      # - mpirun -n 4 python3 solid_dispstress_tda.py
      - mpirun -n 4 python3 solid_velostress_tda.py

demo/plasticity:
   extends: .demo_template
   script:
      - cd plasticity 
      - mpirun -n 8 python3 solid_plasticity_monolithic.py

demo/plasticity_rankine:
   extends: .demo_template
   script:
      - cd plasticity_rankine
      - mpirun -n 8 python3 rankine.py

demo/spectral:
   extends: .demo_template
   script:
      - cd spectral 
      - mpirun -n 8 python3 spectral_elasticity.py

demo/continuation:
   extends: .demo_template
   script:
      - cd continuation
      - mpirun -n 1 python3 continuation_planartruss.py
      - mpirun -n 2 python3 continuation_planartruss.py
